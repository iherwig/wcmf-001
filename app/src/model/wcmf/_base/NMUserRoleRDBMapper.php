<?php
/**
 * This file was generated by ChronosGenerator wcmf-1.0.16.0001 from model.uml.
 * Manual modifications should be placed inside the protected regions.
 */
namespace app\src\model\wcmf\_base;

use app\src\model\wcmf\NMUserRole;

use wcmf\lib\i18n\Message;
use wcmf\lib\model\mapper\NodeUnifiedRDBMapper;
use wcmf\lib\model\mapper\RDBAttributeDescription;
use wcmf\lib\model\mapper\RDBManyToManyRelationDescription;
use wcmf\lib\model\mapper\RDBManyToOneRelationDescription;
use wcmf\lib\model\mapper\RDBOneToManyRelationDescription;
use wcmf\lib\persistence\ReferenceDescription;
use wcmf\lib\persistence\TransientAttributeDescription;
use wcmf\lib\persistence\ObjectId;

/**
 * NMUserRoleRDBMapper maps NMUserRole Nodes to the database.
 */
class NMUserRoleRDBMapper extends NodeUnifiedRDBMapper {

  /**
   * @see RDBMapper::getType()
   */
  public function getType() {
    return 'app.src.model.wcmf.NMUserRole';
  }

  /**
   * @see PersistenceMapper::getTypeDisplayName()
   */
  public function getTypeDisplayName(Message $message) {
    return $message->getText("NMUserRole");
  }

  /**
   * @see PersistenceMapper::getTypeDescription()
   */
  public function getTypeDescription(Message $message) {
    return $message->getText("");
  }

  /**
   * @see PersistenceMapper::getAttributeDisplayName()
   */
  public function getAttributeDisplayName($name, Message $message) {
    $displayName = $name;
    if (false) {}
      elseif ($name == 'fk_role_id') { $displayName = $message->getText("fk_role_id"); }
      elseif ($name == 'fk_user_id') { $displayName = $message->getText("fk_user_id"); }
    return $displayName;
  }

  /**
   * @see PersistenceMapper::getAttributeDescription()
   */
  public function getAttributeDescription($name, Message $message) {
    $description = $name;
    if (false) {}
      elseif ($name == 'fk_role_id') { $description = $message->getText(""); }
      elseif ($name == 'fk_user_id') { $description = $message->getText(""); }
    return $description;
  }

  /**
   * @see PersistenceMapper::getPkNames()
   */
  public function getPkNames() {
    return ['fk_role_id', 'fk_user_id'];
  }

  /**
   * @see PersistenceMapper::getProperties()
   */
  public function getProperties() {
    return [
      'manyToMany' => ['User', 'Role'],
      'isSearchable' => false,
// PROTECTED REGION ID(app/src/model/wcmf/_base/NMUserRoleRDBMapper.php/Properties) ENABLED START
// PROTECTED REGION END
    ];
  }

  /**
   * @see RDBMapper::getOwnDefaultOrder()
   */
  public function getOwnDefaultOrder($roleName=null) {
    $orderDefs = [];
    return $orderDefs;
  }

  /**
   * @see RDBMapper::getRelationDescriptions()
   */
  protected function getRelationDescriptions() {
    return [
      'User' => new RDBManyToOneRelationDescription(
        'app.src.model.wcmf.NMUserRole', 'NMUserRole', 'app.src.model.wcmf.User', 'User',
        '0', 'unbounded', '1', '1', 'shared', 'none', 'true', 'true', 'parent', 'id', 'fk_user_id'
      ),
      'Role' => new RDBManyToOneRelationDescription(
        'app.src.model.wcmf.NMUserRole', 'NMUserRole', 'app.src.model.wcmf.Role', 'Role',
        '0', 'unbounded', '1', '1', 'shared', 'none', 'true', 'true', 'parent', 'id', 'fk_role_id'
      ),
    ];
  }

  /**
   * @see RDBMapper::getAttributeDescriptions()
   */
  protected function getAttributeDescriptions() {
    return [
     /**
      *
      */
      'fk_role_id' => new RDBAttributeDescription('fk_role_id', 'Integer', ['DATATYPE_IGNORE'], null, '', '', false, 'text', 'text', 'NMUserRole', 'fk_role_id'),
     /**
      *
      */
      'fk_user_id' => new RDBAttributeDescription('fk_user_id', 'Integer', ['DATATYPE_IGNORE'], null, '', '', false, 'text', 'text', 'NMUserRole', 'fk_user_id'),
    ];
  }

  /**
   * @see RDBMapper::createObject()
   */
  protected function createObject(ObjectId $oid=null, array $initialData=null) {
    return new NMUserRole($oid, $initialData);
  }

  /**
   * @see NodeUnifiedRDBMapper::getTableName()
   */
  protected function getTableName() {
    return 'NMUserRole';
  }
}

/**
 * Additional names to be included by l10n tools ([Pl.]: plural forms)
 * - $message->getText("NMUserRole [Pl.]")
 * - $message->getText("User")
 * - $message->getText("User [Pl.]")
 * - $message->getText("Role")
 * - $message->getText("Role [Pl.]")
 * Restrictions descriptions to be included by l10n tools
 */
